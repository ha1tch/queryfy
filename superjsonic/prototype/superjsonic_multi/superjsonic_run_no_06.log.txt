Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    22.458µs     165       45.35        100.0    37       2        0       
file2_medium.json 28.7 KB   162.334µs    4129      172.67       100.0    920      50       0       
file3_large.json 92.5 KB   354.625µs    12501     254.81       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    39.592375ms  490001    95.22        100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    42.193209ms  1035611   175.91       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 13.208µs (165 tokens, 77.11 MB/s)
  Standard lib: 70.625µs (14.42 MB/s)
  Speedup: 5.35x

file2_medium.json Comparison:
  Superjsonic: 82.041µs (4129 tokens, 341.65 MB/s)
  Standard lib: 334.75µs (83.73 MB/s)
  Speedup: 4.08x

file3_large.json Comparison:
  Superjsonic: 396.625µs (12501 tokens, 227.83 MB/s)
  Standard lib: 2.19825ms (41.11 MB/s)
  Speedup: 5.54x


Optimizations Enabled: atoms+simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    15.291µs     165       66.61        -        0        0        39      
file2_medium.json 28.7 KB   383.5µs      4129      73.09        -        0        0        970     
file3_large.json 92.5 KB   947.5µs      12501     95.37        -        0        0        3000    
file4_xlarge.json 3.8 MB    22.81375ms   490001    165.25       -        0        0        120000  
file5_xxlarge.json 7.4 MB    30.743125ms  1035611   241.43       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.834µs (165 tokens, 359.39 MB/s)
  Standard lib: 58.791µs (17.32 MB/s)
  Speedup: 20.74x

file2_medium.json Comparison:
  Superjsonic: 63µs (4129 tokens, 444.91 MB/s)
  Standard lib: 248.958µs (112.59 MB/s)
  Speedup: 3.95x

file3_large.json Comparison:
  Superjsonic: 200.542µs (12501 tokens, 450.59 MB/s)
  Standard lib: 733.334µs (123.22 MB/s)
  Speedup: 3.66x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.75µs      165       74.07        -        0        0        39      
file2_medium.json 28.7 KB   165.709µs    4129      169.15       -        0        0        970     
file3_large.json 92.5 KB   354.542µs    12501     254.87       -        0        0        3000    
file4_xlarge.json 3.8 MB    16.718666ms  490001    225.49       -        0        0        120000  
file5_xxlarge.json 7.4 MB    50.059208ms  1035611   148.27       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 3.25µs (165 tokens, 313.39 MB/s)
  Standard lib: 66.333µs (15.35 MB/s)
  Speedup: 20.41x

file2_medium.json Comparison:
  Superjsonic: 188µs (4129 tokens, 149.09 MB/s)
  Standard lib: 286.708µs (97.76 MB/s)
  Speedup: 1.53x

file3_large.json Comparison:
  Superjsonic: 392.791µs (12501 tokens, 230.05 MB/s)
  Standard lib: 768.667µs (117.56 MB/s)
  Speedup: 1.96x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    16.208µs     165       62.84        -        0        0        39      
file2_medium.json 28.7 KB   140µs        4129      200.21       -        0        0        970     
file3_large.json 92.5 KB   347.291µs    12501     260.19       -        0        0        3000    
file4_xlarge.json 3.8 MB    18.160292ms  490001    207.59       -        0        0        120000  
file5_xxlarge.json 7.4 MB    29.880333ms  1035611   248.40       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.833µs (165 tokens, 359.52 MB/s)
  Standard lib: 65.625µs (15.52 MB/s)
  Speedup: 23.16x

file2_medium.json Comparison:
  Superjsonic: 69.5µs (4129 tokens, 403.30 MB/s)
  Standard lib: 254.542µs (110.12 MB/s)
  Speedup: 3.66x

file3_large.json Comparison:
  Superjsonic: 198.5µs (12501 tokens, 455.23 MB/s)
  Standard lib: 770.458µs (117.28 MB/s)
  Speedup: 3.88x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    19.625µs     165       51.90        -        0        0        39      
file2_medium.json 28.7 KB   182µs        4129      154.01       -        0        0        970     
file3_large.json 92.5 KB   423.542µs    12501     213.35       -        0        0        3000    
file4_xlarge.json 3.8 MB    23.376166ms  490001    161.27       -        0        0        120000  
file5_xxlarge.json 7.4 MB    29.116416ms  1035611   254.92       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.625µs (165 tokens, 388.01 MB/s)
  Standard lib: 61.166µs (16.65 MB/s)
  Speedup: 23.30x

file2_medium.json Comparison:
  Superjsonic: 64.416µs (4129 tokens, 435.13 MB/s)
  Standard lib: 257.083µs (109.03 MB/s)
  Speedup: 3.99x

file3_large.json Comparison:
  Superjsonic: 201.125µs (12501 tokens, 449.29 MB/s)
  Standard lib: 761.125µs (118.72 MB/s)
  Speedup: 3.78x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+fastcompare+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    38.75µs      165       26.28        100.0    37       2        0       
file2_medium.json 28.7 KB   419.792µs    4129      66.77        100.0    920      50       0       
file3_large.json 92.5 KB   857.5µs      12501     105.38       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    24.356416ms  490001    154.78       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    42.037917ms  1035611   176.56       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 8.708µs (165 tokens, 116.96 MB/s)
  Standard lib: 60.125µs (16.94 MB/s)
  Speedup: 6.90x

file2_medium.json Comparison:
  Superjsonic: 75.792µs (4129 tokens, 369.82 MB/s)
  Standard lib: 266.5µs (105.18 MB/s)
  Speedup: 3.52x

file3_large.json Comparison:
  Superjsonic: 200.542µs (12501 tokens, 450.59 MB/s)
  Standard lib: 756.583µs (119.44 MB/s)
  Speedup: 3.77x


Optimizations Enabled: atoms+simd+stringview+fastcompare+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    20.375µs     165       49.99        -        0        0        39      
file2_medium.json 28.7 KB   158.958µs    4129      176.33       -        0        0        970     
file3_large.json 92.5 KB   4.820292ms   12501     18.75        -        0        0        3000    
file4_xlarge.json 3.8 MB    19.072083ms  490001    197.67       -        0        0        120000  
file5_xxlarge.json 7.4 MB    27.426958ms  1035611   270.62       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 7.666µs (165 tokens, 132.86 MB/s)
  Standard lib: 59.75µs (17.05 MB/s)
  Speedup: 7.79x

file2_medium.json Comparison:
  Superjsonic: 73.167µs (4129 tokens, 383.09 MB/s)
  Standard lib: 261.584µs (107.15 MB/s)
  Speedup: 3.58x

file3_large.json Comparison:
  Superjsonic: 183.125µs (12501 tokens, 493.45 MB/s)
  Standard lib: 820.667µs (110.11 MB/s)
  Speedup: 4.48x


Optimizations Enabled: simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.75µs      165       46.83        100.0    37       2        0       
file2_medium.json 28.7 KB   161.208µs    4129      173.87       100.0    920      50       0       
file3_large.json 92.5 KB   325.916µs    12501     277.26       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    16.179875ms  490001    233.00       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    41.697667ms  1035611   178.00       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 8.791µs (165 tokens, 115.86 MB/s)
  Standard lib: 84.666µs (12.03 MB/s)
  Speedup: 9.63x

file2_medium.json Comparison:
  Superjsonic: 116.833µs (4129 tokens, 239.91 MB/s)
  Standard lib: 281.375µs (99.62 MB/s)
  Speedup: 2.41x

file3_large.json Comparison:
  Superjsonic: 197.708µs (12501 tokens, 457.05 MB/s)
  Standard lib: 780.542µs (115.77 MB/s)
  Speedup: 3.95x


Optimizations Enabled: atoms+simd+stringview+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.5µs       165       47.37        100.0    37       2        0       
file2_medium.json 28.7 KB   150.667µs    4129      186.04       100.0    920      50       0       
file3_large.json 92.5 KB   339.167µs    12501     266.42       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    17.8075ms    490001    211.71       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    31.012ms     1035611   239.34       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 11.125µs (165 tokens, 91.55 MB/s)
  Standard lib: 68.875µs (14.79 MB/s)
  Speedup: 6.19x

file2_medium.json Comparison:
  Superjsonic: 80.541µs (4129 tokens, 348.01 MB/s)
  Standard lib: 332.542µs (84.29 MB/s)
  Speedup: 4.13x

file3_large.json Comparison:
  Superjsonic: 249.75µs (12501 tokens, 361.81 MB/s)
  Standard lib: 808.584µs (111.75 MB/s)
  Speedup: 3.24x


Optimizations Enabled: atoms+simd+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
