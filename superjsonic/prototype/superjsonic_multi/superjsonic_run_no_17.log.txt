Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21µs         165       48.50        100.0    37       2        0       
file2_medium.json 28.7 KB   155.416µs    4129      180.35       100.0    920      50       0       
file3_large.json 92.5 KB   335.709µs    12501     269.17       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    33.436917ms  490001    112.75       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    42.684208ms  1035611   173.89       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 10.125µs (165 tokens, 100.59 MB/s)
  Standard lib: 66.333µs (15.35 MB/s)
  Speedup: 6.55x

file2_medium.json Comparison:
  Superjsonic: 92.625µs (4129 tokens, 302.61 MB/s)
  Standard lib: 277.583µs (100.98 MB/s)
  Speedup: 3.00x

file3_large.json Comparison:
  Superjsonic: 178.458µs (12501 tokens, 506.35 MB/s)
  Standard lib: 817.917µs (110.48 MB/s)
  Speedup: 4.58x


Optimizations Enabled: atoms+simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    15.333µs     165       66.43        -        0        0        39      
file2_medium.json 28.7 KB   213µs        4129      131.59       -        0        0        970     
file3_large.json 92.5 KB   402.25µs     12501     224.64       -        0        0        3000    
file4_xlarge.json 3.8 MB    17.316708ms  490001    217.71       -        0        0        120000  
file5_xxlarge.json 7.4 MB    60.972166ms  1035611   121.73       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 4.667µs (165 tokens, 218.24 MB/s)
  Standard lib: 71.875µs (14.17 MB/s)
  Speedup: 15.40x

file2_medium.json Comparison:
  Superjsonic: 131.125µs (4129 tokens, 213.76 MB/s)
  Standard lib: 359.417µs (77.99 MB/s)
  Speedup: 2.74x

file3_large.json Comparison:
  Superjsonic: 478.916µs (12501 tokens, 188.68 MB/s)
  Standard lib: 998.875µs (90.46 MB/s)
  Speedup: 2.09x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.875µs     165       73.41        -        0        0        39      
file2_medium.json 28.7 KB   151.042µs    4129      185.57       -        0        0        970     
file3_large.json 92.5 KB   378.625µs    12501     238.66       -        0        0        3000    
file4_xlarge.json 3.8 MB    15.330416ms  490001    245.91       -        0        0        120000  
file5_xxlarge.json 7.4 MB    35.490958ms  1035611   209.13       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.708µs (165 tokens, 376.12 MB/s)
  Standard lib: 63.333µs (16.08 MB/s)
  Speedup: 23.39x

file2_medium.json Comparison:
  Superjsonic: 141.542µs (4129 tokens, 198.03 MB/s)
  Standard lib: 357.584µs (78.39 MB/s)
  Speedup: 2.53x

file3_large.json Comparison:
  Superjsonic: 358.208µs (12501 tokens, 252.26 MB/s)
  Standard lib: 892.375µs (101.26 MB/s)
  Speedup: 2.49x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    15.75µs      165       64.67        -        0        0        39      
file2_medium.json 28.7 KB   136.5µs      4129      205.34       -        0        0        970     
file3_large.json 92.5 KB   391.25µs     12501     230.96       -        0        0        3000    
file4_xlarge.json 3.8 MB    15.98275ms   490001    235.88       -        0        0        120000  
file5_xxlarge.json 7.4 MB    30.285708ms  1035611   245.08       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.583µs (165 tokens, 394.32 MB/s)
  Standard lib: 64.333µs (15.83 MB/s)
  Speedup: 24.91x

file2_medium.json Comparison:
  Superjsonic: 94.709µs (4129 tokens, 295.95 MB/s)
  Standard lib: 251.208µs (111.58 MB/s)
  Speedup: 2.65x

file3_large.json Comparison:
  Superjsonic: 190.958µs (12501 tokens, 473.21 MB/s)
  Standard lib: 740.75µs (121.99 MB/s)
  Speedup: 3.88x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    14µs         165       72.75        -        0        0        39      
file2_medium.json 28.7 KB   133.959µs    4129      209.24       -        0        0        970     
file3_large.json 92.5 KB   403.625µs    12501     223.88       -        0        0        3000    
file4_xlarge.json 3.8 MB    17.591375ms  490001    214.31       -        0        0        120000  
file5_xxlarge.json 7.4 MB    41.8815ms    1035611   177.22       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.833µs (165 tokens, 359.52 MB/s)
  Standard lib: 64.5µs (15.79 MB/s)
  Speedup: 22.77x

file2_medium.json Comparison:
  Superjsonic: 64.708µs (4129 tokens, 433.17 MB/s)
  Standard lib: 261.25µs (107.29 MB/s)
  Speedup: 4.04x

file3_large.json Comparison:
  Superjsonic: 194.875µs (12501 tokens, 463.69 MB/s)
  Standard lib: 769µs (117.51 MB/s)
  Speedup: 3.95x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+fastcompare+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    20.708µs     165       49.19        100.0    37       2        0       
file2_medium.json 28.7 KB   148.166µs    4129      189.18       100.0    920      50       0       
file3_large.json 92.5 KB   316.958µs    12501     285.09       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    16.400041ms  490001    229.88       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    42.708084ms  1035611   173.79       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 11.292µs (165 tokens, 90.20 MB/s)
  Standard lib: 66.584µs (15.30 MB/s)
  Speedup: 5.90x

file2_medium.json Comparison:
  Superjsonic: 87.5µs (4129 tokens, 320.34 MB/s)
  Standard lib: 292.75µs (95.75 MB/s)
  Speedup: 3.35x

file3_large.json Comparison:
  Superjsonic: 212.292µs (12501 tokens, 425.65 MB/s)
  Standard lib: 798.958µs (113.10 MB/s)
  Speedup: 3.76x


Optimizations Enabled: atoms+simd+stringview+fastcompare+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.708µs     165       46.92        -        0        0        39      
file2_medium.json 28.7 KB   234.875µs    4129      119.34       -        0        0        970     
file3_large.json 92.5 KB   334.75µs     12501     269.94       -        0        0        3000    
file4_xlarge.json 3.8 MB    16.673375ms  490001    226.11       -        0        0        120000  
file5_xxlarge.json 7.4 MB    26.004792ms  1035611   285.42       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 7.792µs (165 tokens, 130.71 MB/s)
  Standard lib: 60.125µs (16.94 MB/s)
  Speedup: 7.72x

file2_medium.json Comparison:
  Superjsonic: 65.25µs (4129 tokens, 429.57 MB/s)
  Standard lib: 249.75µs (112.23 MB/s)
  Speedup: 3.83x

file3_large.json Comparison:
  Superjsonic: 175.708µs (12501 tokens, 514.28 MB/s)
  Standard lib: 730.5µs (123.70 MB/s)
  Speedup: 4.16x


Optimizations Enabled: simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.167µs     165       48.12        100.0    37       2        0       
file2_medium.json 28.7 KB   154.25µs     4129      181.71       100.0    920      50       0       
file3_large.json 92.5 KB   320.416µs    12501     282.02       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    15.911708ms  490001    236.93       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    37.856083ms  1035611   196.07       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 9.334µs (165 tokens, 109.12 MB/s)
  Standard lib: 70.458µs (14.46 MB/s)
  Speedup: 7.55x

file2_medium.json Comparison:
  Superjsonic: 78.458µs (4129 tokens, 357.25 MB/s)
  Standard lib: 284.417µs (98.55 MB/s)
  Speedup: 3.63x

file3_large.json Comparison:
  Superjsonic: 208.916µs (12501 tokens, 432.53 MB/s)
  Standard lib: 774.875µs (116.62 MB/s)
  Speedup: 3.71x


Optimizations Enabled: atoms+simd+stringview+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.125µs     165       48.21        100.0    37       2        0       
file2_medium.json 28.7 KB   176.375µs    4129      158.92       100.0    920      50       0       
file3_large.json 92.5 KB   334.542µs    12501     270.11       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    15.942417ms  490001    236.47       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    28.3475ms    1035611   261.83       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 8.125µs (165 tokens, 125.36 MB/s)
  Standard lib: 58.834µs (17.31 MB/s)
  Speedup: 7.24x

file2_medium.json Comparison:
  Superjsonic: 63.458µs (4129 tokens, 441.70 MB/s)
  Standard lib: 254.333µs (110.21 MB/s)
  Speedup: 4.01x

file3_large.json Comparison:
  Superjsonic: 174.792µs (12501 tokens, 516.97 MB/s)
  Standard lib: 734.625µs (123.01 MB/s)
  Speedup: 4.20x


Optimizations Enabled: atoms+simd+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
