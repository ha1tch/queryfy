Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    40.166µs     165       25.36        100.0    37       2        0       
file2_medium.json 28.7 KB   479.917µs    4129      58.40        100.0    920      50       0       
file3_large.json 92.5 KB   460.958µs    12501     196.03       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    23.740334ms  490001    158.80       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    63.09325ms   1035611   117.64       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 10.042µs (165 tokens, 101.43 MB/s)
  Standard lib: 64.041µs (15.90 MB/s)
  Speedup: 6.38x

file2_medium.json Comparison:
  Superjsonic: 85.75µs (4129 tokens, 326.87 MB/s)
  Standard lib: 535.209µs (52.37 MB/s)
  Speedup: 6.24x

file3_large.json Comparison:
  Superjsonic: 224.75µs (12501 tokens, 402.06 MB/s)
  Standard lib: 854.291µs (105.77 MB/s)
  Speedup: 3.80x


Optimizations Enabled: atoms+simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    16.208µs     165       62.84        -        0        0        39      
file2_medium.json 28.7 KB   140.458µs    4129      199.56       -        0        0        970     
file3_large.json 92.5 KB   389.709µs    12501     231.87       -        0        0        3000    
file4_xlarge.json 3.8 MB    15.576625ms  490001    242.03       -        0        0        120000  
file5_xxlarge.json 7.4 MB    37.067083ms  1035611   200.24       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.709µs (165 tokens, 375.98 MB/s)
  Standard lib: 70.875µs (14.37 MB/s)
  Speedup: 26.16x

file2_medium.json Comparison:
  Superjsonic: 177.375µs (4129 tokens, 158.02 MB/s)
  Standard lib: 338.417µs (82.83 MB/s)
  Speedup: 1.91x

file3_large.json Comparison:
  Superjsonic: 443.833µs (12501 tokens, 203.60 MB/s)
  Standard lib: 12.449209ms (7.26 MB/s)
  Speedup: 28.05x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.875µs     165       73.41        -        0        0        39      
file2_medium.json 28.7 KB   138.334µs    4129      202.62       -        0        0        970     
file3_large.json 92.5 KB   347.542µs    12501     260.00       -        0        0        3000    
file4_xlarge.json 3.8 MB    17.927625ms  490001    210.29       -        0        0        120000  
file5_xxlarge.json 7.4 MB    33.471583ms  1035611   221.75       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 4.375µs (165 tokens, 232.81 MB/s)
  Standard lib: 71.208µs (14.30 MB/s)
  Speedup: 16.28x

file2_medium.json Comparison:
  Superjsonic: 79.459µs (4129 tokens, 352.75 MB/s)
  Standard lib: 548µs (51.15 MB/s)
  Speedup: 6.90x

file3_large.json Comparison:
  Superjsonic: 629.584µs (12501 tokens, 143.53 MB/s)
  Standard lib: 884.5µs (102.16 MB/s)
  Speedup: 1.40x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.833µs     165       73.63        -        0        0        39      
file2_medium.json 28.7 KB   132.416µs    4129      211.68       -        0        0        970     
file3_large.json 92.5 KB   342.666µs    12501     263.70       -        0        0        3000    
file4_xlarge.json 3.8 MB    22.736625ms  490001    165.81       -        0        0        120000  
file5_xxlarge.json 7.4 MB    36.666583ms  1035611   202.43       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 3.416µs (165 tokens, 298.16 MB/s)
  Standard lib: 66.166µs (15.39 MB/s)
  Speedup: 19.37x

file2_medium.json Comparison:
  Superjsonic: 72.834µs (4129 tokens, 384.84 MB/s)
  Standard lib: 269.583µs (103.97 MB/s)
  Speedup: 3.70x

file3_large.json Comparison:
  Superjsonic: 204µs (12501 tokens, 442.95 MB/s)
  Standard lib: 775.334µs (116.55 MB/s)
  Speedup: 3.80x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    17.125µs     165       59.48        -        0        0        39      
file2_medium.json 28.7 KB   150.333µs    4129      186.45       -        0        0        970     
file3_large.json 92.5 KB   355.5µs      12501     254.18       -        0        0        3000    
file4_xlarge.json 3.8 MB    25.017417ms  490001    150.69       -        0        0        120000  
file5_xxlarge.json 7.4 MB    38.874583ms  1035611   190.93       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.583µs (165 tokens, 394.32 MB/s)
  Standard lib: 61.75µs (16.49 MB/s)
  Speedup: 23.91x

file2_medium.json Comparison:
  Superjsonic: 65.209µs (4129 tokens, 429.84 MB/s)
  Standard lib: 257.833µs (108.71 MB/s)
  Speedup: 3.95x

file3_large.json Comparison:
  Superjsonic: 196µs (12501 tokens, 461.03 MB/s)
  Standard lib: 750.959µs (120.33 MB/s)
  Speedup: 3.83x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+fastcompare+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    23.5µs       165       43.34        100.0    37       2        0       
file2_medium.json 28.7 KB   172.458µs    4129      162.53       100.0    920      50       0       
file3_large.json 92.5 KB   392.833µs    12501     230.03       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    33.372083ms  490001    112.97       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    67.604458ms  1035611   109.79       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 10.916µs (165 tokens, 93.31 MB/s)
  Standard lib: 77.417µs (13.16 MB/s)
  Speedup: 7.09x

file2_medium.json Comparison:
  Superjsonic: 77.542µs (4129 tokens, 361.47 MB/s)
  Standard lib: 679.916µs (41.22 MB/s)
  Speedup: 8.77x

file3_large.json Comparison:
  Superjsonic: 303.333µs (12501 tokens, 297.90 MB/s)
  Standard lib: 1.9835ms (45.56 MB/s)
  Speedup: 6.54x


Optimizations Enabled: atoms+simd+stringview+fastcompare+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.041µs     165       48.41        -        0        0        39      
file2_medium.json 28.7 KB   160.875µs    4129      174.23       -        0        0        970     
file3_large.json 92.5 KB   325.625µs    12501     277.50       -        0        0        3000    
file4_xlarge.json 3.8 MB    21.24425ms   490001    177.46       -        0        0        120000  
file5_xxlarge.json 7.4 MB    66.015125ms  1035611   112.43       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 33.042µs (165 tokens, 30.83 MB/s)
  Standard lib: 3.480667ms (0.29 MB/s)
  Speedup: 105.34x

file2_medium.json Comparison:
  Superjsonic: 106.166µs (4129 tokens, 264.02 MB/s)
  Standard lib: 265.209µs (105.69 MB/s)
  Speedup: 2.50x

file3_large.json Comparison:
  Superjsonic: 194.083µs (12501 tokens, 465.59 MB/s)
  Standard lib: 791.625µs (114.15 MB/s)
  Speedup: 4.08x


Optimizations Enabled: simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    22.125µs     165       46.03        100.0    37       2        0       
file2_medium.json 28.7 KB   163.25µs     4129      171.70       100.0    920      50       0       
file3_large.json 92.5 KB   390.583µs    12501     231.35       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    20.467583ms  490001    184.19       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    47.976084ms  1035611   154.71       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 12µs (165 tokens, 84.88 MB/s)
  Standard lib: 63.917µs (15.94 MB/s)
  Speedup: 5.33x

file2_medium.json Comparison:
  Superjsonic: 80.042µs (4129 tokens, 350.18 MB/s)
  Standard lib: 270.166µs (103.75 MB/s)
  Speedup: 3.38x

file3_large.json Comparison:
  Superjsonic: 214.875µs (12501 tokens, 420.54 MB/s)
  Standard lib: 832.125µs (108.59 MB/s)
  Speedup: 3.87x


Optimizations Enabled: atoms+simd+stringview+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    21.5µs       165       47.37        100.0    37       2        0       
file2_medium.json 28.7 KB   152.916µs    4129      183.30       100.0    920      50       0       
file3_large.json 92.5 KB   362.333µs    12501     249.39       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    16.469417ms  490001    228.91       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    66.604ms     1035611   111.44       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 10.917µs (165 tokens, 93.30 MB/s)
  Standard lib: 65.083µs (15.65 MB/s)
  Speedup: 5.96x

file2_medium.json Comparison:
  Superjsonic: 78.084µs (4129 tokens, 358.97 MB/s)
  Standard lib: 273.5µs (102.48 MB/s)
  Speedup: 3.50x

file3_large.json Comparison:
  Superjsonic: 208.834µs (12501 tokens, 432.70 MB/s)
  Standard lib: 817.833µs (110.49 MB/s)
  Speedup: 3.92x


Optimizations Enabled: atoms+simd+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
