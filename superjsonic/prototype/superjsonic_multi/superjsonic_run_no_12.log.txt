Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    23.042µs     165       44.20        100.0    37       2        0       
file2_medium.json 28.7 KB   158.583µs    4129      176.75       100.0    920      50       0       
file3_large.json 92.5 KB   334.75µs     12501     269.94       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    21.844ms     490001    172.59       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    61.976167ms  1035611   119.76       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 9.458µs (165 tokens, 107.69 MB/s)
  Standard lib: 69.208µs (14.72 MB/s)
  Speedup: 7.32x

file2_medium.json Comparison:
  Superjsonic: 84.25µs (4129 tokens, 332.69 MB/s)
  Standard lib: 320.75µs (87.39 MB/s)
  Speedup: 3.81x

file3_large.json Comparison:
  Superjsonic: 202.875µs (12501 tokens, 445.41 MB/s)
  Standard lib: 1.128583ms (80.07 MB/s)
  Speedup: 5.56x


Optimizations Enabled: atoms+simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    14.292µs     165       71.27        -        0        0        39      
file2_medium.json 28.7 KB   174.75µs     4129      160.40       -        0        0        970     
file3_large.json 92.5 KB   389.125µs    12501     232.22       -        0        0        3000    
file4_xlarge.json 3.8 MB    14.37525ms   490001    262.25       -        0        0        120000  
file5_xxlarge.json 7.4 MB    36.246541ms  1035611   204.77       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.666µs (165 tokens, 382.04 MB/s)
  Standard lib: 70.542µs (14.44 MB/s)
  Speedup: 26.46x

file2_medium.json Comparison:
  Superjsonic: 80µs (4129 tokens, 350.37 MB/s)
  Standard lib: 257.042µs (109.05 MB/s)
  Speedup: 3.21x

file3_large.json Comparison:
  Superjsonic: 326.625µs (12501 tokens, 276.66 MB/s)
  Standard lib: 858.792µs (105.22 MB/s)
  Speedup: 2.63x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.916µs     165       73.19        -        0        0        39      
file2_medium.json 28.7 KB   150.917µs    4129      185.73       -        0        0        970     
file3_large.json 92.5 KB   349.5µs      12501     258.55       -        0        0        3000    
file4_xlarge.json 3.8 MB    18.176416ms  490001    207.41       -        0        0        120000  
file5_xxlarge.json 7.4 MB    39.045416ms  1035611   190.09       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.542µs (165 tokens, 400.68 MB/s)
  Standard lib: 64.791µs (15.72 MB/s)
  Speedup: 25.49x

file2_medium.json Comparison:
  Superjsonic: 63.833µs (4129 tokens, 439.11 MB/s)
  Standard lib: 263.292µs (106.46 MB/s)
  Speedup: 4.12x

file3_large.json Comparison:
  Superjsonic: 181.333µs (12501 tokens, 498.32 MB/s)
  Standard lib: 731.708µs (123.50 MB/s)
  Speedup: 4.04x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.916µs     165       73.19        -        0        0        39      
file2_medium.json 28.7 KB   130.208µs    4129      215.27       -        0        0        970     
file3_large.json 92.5 KB   350.292µs    12501     257.96       -        0        0        3000    
file4_xlarge.json 3.8 MB    16.848041ms  490001    223.76       -        0        0        120000  
file5_xxlarge.json 7.4 MB    36.392708ms  1035611   203.95       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 2.75µs (165 tokens, 370.37 MB/s)
  Standard lib: 65.167µs (15.63 MB/s)
  Speedup: 23.70x

file2_medium.json Comparison:
  Superjsonic: 109.042µs (4129 tokens, 257.05 MB/s)
  Standard lib: 272.833µs (102.73 MB/s)
  Speedup: 2.50x

file3_large.json Comparison:
  Superjsonic: 414.125µs (12501 tokens, 218.20 MB/s)
  Standard lib: 825.083µs (109.52 MB/s)
  Speedup: 1.99x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: none


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    13.417µs     165       75.91        -        0        0        39      
file2_medium.json 28.7 KB   149.417µs    4129      187.59       -        0        0        970     
file3_large.json 92.5 KB   369.292µs    12501     244.69       -        0        0        3000    
file4_xlarge.json 3.8 MB    15.770292ms  490001    239.05       -        0        0        120000  
file5_xxlarge.json 7.4 MB    29.974792ms  1035611   247.62       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 4.292µs (165 tokens, 237.31 MB/s)
  Standard lib: 67.334µs (15.13 MB/s)
  Speedup: 15.69x

file2_medium.json Comparison:
  Superjsonic: 92.167µs (4129 tokens, 304.12 MB/s)
  Standard lib: 2.166375ms (12.94 MB/s)
  Speedup: 23.50x

file3_large.json Comparison:
  Superjsonic: 1.444166ms (12501 tokens, 62.57 MB/s)
  Standard lib: 1.55875ms (57.97 MB/s)
  Speedup: 1.08x


Optimizations Enabled: none

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+fastcompare+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    22.25µs      165       45.78        100.0    37       2        0       
file2_medium.json 28.7 KB   162.125µs    4129      172.89       100.0    920      50       0       
file3_large.json 92.5 KB   356.208µs    12501     253.68       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    16.910625ms  490001    222.93       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    30.916625ms  1035611   240.07       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 10.334µs (165 tokens, 98.56 MB/s)
  Standard lib: 66.167µs (15.39 MB/s)
  Speedup: 6.40x

file2_medium.json Comparison:
  Superjsonic: 83.416µs (4129 tokens, 336.02 MB/s)
  Standard lib: 289.458µs (96.83 MB/s)
  Speedup: 3.47x

file3_large.json Comparison:
  Superjsonic: 226.75µs (12501 tokens, 398.51 MB/s)
  Standard lib: 890.458µs (101.48 MB/s)
  Speedup: 3.93x


Optimizations Enabled: atoms+simd+stringview+fastcompare+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: simd+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    20.875µs     165       48.79        -        0        0        39      
file2_medium.json 28.7 KB   151.042µs    4129      185.57       -        0        0        970     
file3_large.json 92.5 KB   338.5µs      12501     266.95       -        0        0        3000    
file4_xlarge.json 3.8 MB    17.489334ms  490001    215.56       -        0        0        120000  
file5_xxlarge.json 7.4 MB    43.779958ms  1035611   169.54       -        0        0        247484  


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 8.375µs (165 tokens, 121.61 MB/s)
  Standard lib: 63.958µs (15.92 MB/s)
  Speedup: 7.64x

file2_medium.json Comparison:
  Superjsonic: 72.208µs (4129 tokens, 388.18 MB/s)
  Standard lib: 257.791µs (108.73 MB/s)
  Speedup: 3.57x

file3_large.json Comparison:
  Superjsonic: 180.375µs (12501 tokens, 500.97 MB/s)
  Standard lib: 718.916µs (125.69 MB/s)
  Speedup: 3.99x


Optimizations Enabled: simd+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+stringview+array+pooling


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    20.125µs     165       50.61        100.0    37       2        0       
file2_medium.json 28.7 KB   170.333µs    4129      164.56       100.0    920      50       0       
file3_large.json 92.5 KB   334.042µs    12501     270.51       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    15.961375ms  490001    236.19       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    34.674917ms  1035611   214.05       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 8µs (165 tokens, 127.32 MB/s)
  Standard lib: 61µs (16.70 MB/s)
  Speedup: 7.62x

file2_medium.json Comparison:
  Superjsonic: 75.459µs (4129 tokens, 371.45 MB/s)
  Standard lib: 259.75µs (107.91 MB/s)
  Speedup: 3.44x

file3_large.json Comparison:
  Superjsonic: 204.625µs (12501 tokens, 441.60 MB/s)
  Standard lib: 779.042µs (115.99 MB/s)
  Speedup: 3.81x


Optimizations Enabled: atoms+simd+stringview+array+pooling

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
Superjsonic with Optimized Configuration Checks
===============================================
Configuration: atoms+simd+array+pooling+simd16


Results Summary:
File            Size      Parse Time   Tokens    Throughput   Atoms%   Atom64   Atom128  Regular
----            ----      ----------   ------    ----------   ------   ------   -------  -------
file1_small.json 1.0 KB    19.875µs     165       51.25        100.0    37       2        0       
file2_medium.json 28.7 KB   191.041µs    4129      146.72       100.0    920      50       0       
file3_large.json 92.5 KB   320.334µs    12501     282.09       100.0    2500     500      0       
file4_xlarge.json 3.8 MB    17.5435ms    490001    214.89       100.0    85000    35000    0       
file5_xxlarge.json 7.4 MB    34.0895ms    1035611   217.73       100.0    210539   36945    0       


Comparison with Standard Library:
---------------------------------

file1_small.json Comparison:
  Superjsonic: 7.708µs (165 tokens, 132.14 MB/s)
  Standard lib: 57.958µs (17.57 MB/s)
  Speedup: 7.52x

file2_medium.json Comparison:
  Superjsonic: 63.75µs (4129 tokens, 439.68 MB/s)
  Standard lib: 249.458µs (112.36 MB/s)
  Speedup: 3.91x

file3_large.json Comparison:
  Superjsonic: 174.459µs (12501 tokens, 517.96 MB/s)
  Standard lib: 703.5µs (128.45 MB/s)
  Speedup: 4.03x


Optimizations Enabled: atoms+simd+array+pooling+simd16

Usage examples:
  Disable all:     go run main.go -none
  Only SIMD:       go run main.go -none -simd
  Only atoms:      go run main.go -none -atoms
  No atoms:        go run main.go -atoms=false
  Everything:      go run main.go -all
  With stringview: go run main.go -stringview
